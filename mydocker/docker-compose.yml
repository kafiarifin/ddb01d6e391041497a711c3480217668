version: '3.5'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
    ipam:
      driver: ${NETWORKS_IPAM_DRIVER}
      config:
        - subnet: 172.22.0.0/16
  backend:
    driver: ${NETWORKS_DRIVER}
    ipam:
      driver: ${NETWORKS_IPAM_DRIVER}
      config:
        - subnet: 172.21.0.0/16

volumes:
  postgres:
    driver: ${VOLUMES_DRIVER}
  pgadmin:
    driver: ${VOLUMES_DRIVER}

services:

### PHP-FPM ##############################################
    php-fpm:
      container_name: ${COMPOSE_PROJECT_NAME}_php-fpm
      build:
        context: ./php-fpm
        args:
          - PHP_VERSION=${PHP_VERSION}
          - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
          - INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}
          - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
          - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
          - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
          - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
          - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
          - INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}
          - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
          - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
          - INSTALL_PING=${PHP_FPM_INSTALL_PING}
          - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
          - PUID=${PHP_FPM_PUID}
          - PGID=${PHP_FPM_PGID}
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      ports:
        - "9003:9003"
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      environment:
        - DOCKER_TLS_VERIFY=1
        - DOCKER_TLS_CERTDIR=/certs
        - DOCKER_CERT_PATH=/certs/client
        - FAKETIME=${PHP_FPM_FAKETIME}
      depends_on:
        - postgres
      networks:
        backend:
          ipv4_address: ${PHP_FPM_IP_ADDRESS_BACKEND}

### NGINX Server #########################################
    nginx:
      container_name: ${COMPOSE_PROJECT_NAME}_nginx
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      networks:
        frontend:
          ipv4_address: ${NGINX_IP_ADDRESS_FRONTEND}
        backend:
          ipv4_address: ${NGINX_IP_ADDRESS_BACKEND}

### PostgreSQL ###########################################
    postgres:
      container_name: ${COMPOSE_PROJECT_NAME}_postgres
      build:
        context: ./postgres
        args:
          - POSTGRES_VERSION=${POSTGRES_VERSION}
      volumes:
        - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - PGDATA=${POSTGRES_PGDATA}
      networks:
        backend:
          ipv4_address: ${POSTGRES_IP_ADDRESS_BACKEND}

### pgAdmin ##############################################
    pgadmin:
      container_name: ${COMPOSE_PROJECT_NAME}_pgadmin
      image: dpage/pgadmin4:latest
      environment:
        - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
        - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
      ports:
        - "${PGADMIN_PORT}:80"
      volumes:
        - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin
      depends_on:
        - postgres
      networks:
        frontend:
          ipv4_address: ${PGADMIN_IP_ADDRESS_FRONTEND}
        backend:
          ipv4_address: ${PGADMIN_IP_ADDRESS_BACKEND}